# Generated by Django 3.2.19 on 2023-09-12 18:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name='date joined',
                    ),
                ),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        help_text='Загрузите изображение',
                        upload_to='users/%Y/%m/%d',
                        verbose_name='Изображение',
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        help_text='Введите адрес электронной почты',
                        max_length=255,
                        unique=True,
                        verbose_name='Адрес электронной почты',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        help_text='Введите ваше имя',
                        max_length=255,
                        verbose_name='Имя',
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        help_text='Введите вашу фамилию',
                        max_length=255,
                        verbose_name='Фамилия',
                    ),
                ),
                (
                    'birthday',
                    models.DateField(
                        blank=True,
                        help_text='Введите вашу дату рождения',
                        null=True,
                        verbose_name='Дата рождения',
                    ),
                ),
                (
                    'password',
                    models.CharField(
                        help_text='Введите пароль',
                        max_length=255,
                        verbose_name='Пароль',
                    ),
                ),
                (
                    'role',
                    models.CharField(
                        choices=[
                            ('user', 'Пользователь'),
                            ('teamleader', 'Тимлид'),
                            ('admin', 'Администратор'),
                        ],
                        default='user',
                        max_length=10,
                        verbose_name='Роль',
                    ),
                ),
                (
                    'position',
                    models.CharField(
                        choices=[
                            ('junior', 'Junior'),
                            ('middle', 'Middle'),
                            ('senior', 'Senior'),
                        ],
                        default='junior',
                        max_length=6,
                        verbose_name='Уровень должности',
                    ),
                ),
                (
                    'experience',
                    models.IntegerField(default=1, verbose_name='Опыт работы'),
                ),
                (
                    'reward_points',
                    models.PositiveIntegerField(
                        default=0, verbose_name='Баллы'
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        verbose_name='Является ли пользователь персоналом',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=False, verbose_name='Активен ли пользователь'
                    ),
                ),
                (
                    'completed_tasks_count',
                    models.PositiveIntegerField(default=0),
                ),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('-reward_points', 'email'),
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Введите достижение',
                        max_length=255,
                        verbose_name='Достижение',
                    ),
                ),
                (
                    'value',
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name='Ценность',
                    ),
                ),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        help_text='Загрузите изображение',
                        upload_to='users/achievements/%Y/%m/%d',
                        verbose_name='Изображение',
                    ),
                ),
                (
                    'description',
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name='Описание достижения',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('contact_type', models.CharField(max_length=50)),
                ('link', models.CharField(max_length=255)),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='Contact',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        choices=[
                            ('Backend', 'Backend'),
                            ('Frontend', 'Frontend'),
                            ('UX_UI', 'Ux Ui'),
                            ('QA', 'Qa'),
                            ('None', 'None'),
                        ],
                        default='None',
                        max_length=10,
                        verbose_name='Подразделение',
                    ),
                ),
                (
                    'description',
                    models.TextField(
                        help_text='Добавьте описание подразделения',
                        verbose_name='Описание',
                    ),
                ),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        help_text='Загрузите изображение',
                        upload_to='users/department/%Y/%m/%d',
                        verbose_name='Изображение',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Hardskill',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Введите профессиоанльный навык/хардскилл',
                        max_length=255,
                        unique=True,
                        verbose_name='Хардскилл',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Хардскилл',
                'verbose_name_plural': 'Хардскиллы',
            },
        ),
        migrations.CreateModel(
            name='UserHardskill',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'hardskill',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='users.hardskill',
                        verbose_name='Хард скилл',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='user_hardskill',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Пользователь',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Профессиональный навык пользователя',
                'verbose_name_plural': 'Профессиональные навыки пользователя',
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'contact',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='users.contact',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='user_contacts',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'achievement',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='users.achievement',
                        verbose_name='Достижение',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='user_achievement',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Пользователь',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Достижение пользователя',
                'verbose_name_plural': 'Достижения пользователя',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='achievements',
            field=models.ManyToManyField(
                through='users.UserAchievement', to='users.Achievement'
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='contacts',
            field=models.ManyToManyField(
                blank=True,
                related_name='user_contacts',
                through='users.UserContact',
                to='users.Contact',
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='users_department',
                to='users.department',
                verbose_name='Подразделение',
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(
                blank=True,
                help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                related_name='user_set',
                related_query_name='user',
                to='auth.Group',
                verbose_name='groups',
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='hardskills',
            field=models.ManyToManyField(
                through='users.UserHardskill', to='users.Hardskill'
            ),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(
                blank=True,
                help_text='Specific permissions for this user.',
                related_name='user_set',
                related_query_name='user',
                to='auth.Permission',
                verbose_name='user permissions',
            ),
        ),
        migrations.AddConstraint(
            model_name='userhardskill',
            constraint=models.UniqueConstraint(
                fields=('user', 'hardskill'), name='unique hardskill for user'
            ),
        ),
        migrations.AddConstraint(
            model_name='userachievement',
            constraint=models.UniqueConstraint(
                fields=('user', 'achievement'),
                name='unique achievement for user',
            ),
        ),
    ]
